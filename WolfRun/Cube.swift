//
//  Cube.swift
//  WolfRun
//
//  Created by user on 13/02/2017.
//  Copyright Â© 2017 Baked Goods Studios. All rights reserved.
//

import OpenGLES

class Cube : Actor {
    var position: Vec3 = Vec3(x: 0, y: 0, z: 0)
    var velocity: Vec3 = Vec3(x: 0, y: 0, z: 0)
    
    var shader: Shader!
    var mesh:   Mesh!
    
    /* [posX, posY, posZ, normX, normY, normZ] */
    var vertices: [GLfloat] = [
        0.5, -0.5, -0.5,   1.0, 0.0, 0.0,   0.5,  0.5, -0.5,   1.0, 0.0, 0.0,   0.5, -0.5,  0.5,   1.0, 0.0, 0.0,
        0.5, -0.5,  0.5,   1.0, 0.0, 0.0,   0.5,  0.5, -0.5,   1.0, 0.0, 0.0,   0.5,  0.5,  0.5,   1.0, 0.0, 0.0,
        0.5, 0.5, -0.5,    0.0, 1.0, 0.0,   -0.5, 0.5, -0.5,   0.0, 1.0, 0.0,   0.5, 0.5,  0.5,    0.0, 1.0, 0.0,
        0.5, 0.5,  0.5,    0.0, 1.0, 0.0,   -0.5, 0.5, -0.5,   0.0, 1.0, 0.0,   -0.5, 0.5,  0.5,   0.0, 1.0, 0.0,
        -0.5,  0.5, -0.5,  -1.0, 0.0, 0.0,  -0.5, -0.5, -0.5,  -1.0, 0.0, 0.0,  -0.5,  0.5,  0.5,  -1.0, 0.0, 0.0,
        -0.5,  0.5,  0.5,  -1.0, 0.0, 0.0,  -0.5, -0.5, -0.5,  -1.0, 0.0, 0.0,  -0.5, -0.5,  0.5,  -1.0, 0.0, 0.0,
        -0.5, -0.5, -0.5,   0.0, -1.0, 0.0,  0.5, -0.5, -0.5,   0.0, -1.0, 0.0,  -0.5, -0.5,  0.5,  0.0, -1.0, 0.0,
        -0.5, -0.5,  0.5,   0.0, -1.0, 0.0,  0.5, -0.5, -0.5,   0.0, -1.0, 0.0,  0.5, -0.5,  0.5,   0.0, -1.0, 0.0,
        0.5,  0.5, 0.5,     0.0, 0.0, 1.0,  -0.5,  0.5, 0.5,    0.0, 0.0, 1.0,   0.5, -0.5, 0.5,    0.0, 0.0, 1.0,
        0.5, -0.5, 0.5,     0.0, 0.0, 1.0,  -0.5,  0.5, 0.5,    0.0, 0.0, 1.0,  -0.5, -0.5, 0.5,    0.0, 0.0, 1.0,
        0.5, -0.5, -0.5,    0.0, 0.0, -1.0, -0.5, -0.5, -0.5,   0.0, 0.0, -1.0,  0.5,  0.5, -0.5,   0.0, 0.0, -1.0,
        0.5,  0.5, -0.5,    0.0, 0.0, -1.0, -0.5, -0.5, -0.5,   0.0, 0.0, -1.0, -0.5,  0.5, -0.5,   0.0, 0.0, -1.0
    ]
    
    init () {
        shader = Shader(path: "Shader")
        mesh   = Mesh(v: vertices)
    }
    
    func update() {
        // do movement
        position.add(other: velocity)
    }
    
    func draw(camera: Camera) {
        shader.bind()
        mesh.bind()
        mesh.draw(shader: shader, camera: camera)
    }
}
